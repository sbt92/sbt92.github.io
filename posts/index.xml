<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Sam Tripp</title><link>https://www.samtripp.co.uk/posts/</link><description>The personal website of Sam Tripp</description><generator>Hugo -- gohugo.io</generator><language>en-GB</language><lastBuildDate>Mon, 29 Apr 2024 16:10:00 +0100</lastBuildDate><atom:link href="https://www.samtripp.co.uk/posts/index.xml" rel="self" type="application/rss+xml"/><item><title>Terraforming my Cloudflare configuration</title><link>https://www.samtripp.co.uk/posts/terraforming-my-cloudflare-configuration/</link><pubDate>Mon, 29 Apr 2024 16:10:00 +0100</pubDate><guid>https://www.samtripp.co.uk/posts/terraforming-my-cloudflare-configuration/</guid><description>&lt;p>A couple of weeks ago I was having a conversation with a friend regarding Cloudflare. He was saying how it is not uncommon for people to make configuration changes using the Cloudflare UI potentially introducing breaking changes that could go unnoticed. I meantioned that with Infrastructure-as-Code implemented there is no excuse for this to happen. I also came to a realisation that I do not practice what I preached so to rectify this I have decided to capture my Cloudflare configuration into my Infrastructure-as-Code tool of choice Terraform.&lt;/p>
&lt;p>Cloudflare handles a number of things for me on this domain but most notably it handles my DNS records for this website and my emails. An outages of either of these would not be ideal for me so to avoid this we are going to use &lt;a href="https://github.com/cloudflare/cf-terraforming">cf-terraforming&lt;/a> to generate Terraform code based on my current DNS configuration in the Cloudflare UI and to generate the terraform import commands so I can import my Cloudflare configuration into my Terraform state.&lt;/p>
&lt;h1 id="building-the-application">Building the application&lt;/h1>
&lt;p>Unfortunately cf-terraforming is not packaged in the Debian repositories and there is no flatpak or snap availible for it so we do have to resort to building it. If you&amp;rsquo;re following along on a Macbook there is a brew package for this which would save some time. Fortunately building this was incredibly straigtforward:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">git clone https://github.com/cloudflare/cf-terraforming.git
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">cd&lt;/span> cf-terraforming
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">make build
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>There may be some dependancies that need to be installed such as the Go programming language but I already had this on my laptop. Once the make command has successfully ran a binary file will appear in the same directory called cf-terraforming. I was able to interact with this binary in the terminal by running &lt;code>./cf-terraforming&lt;/code>&lt;/p>
&lt;h1 id="create-cloudflare-api-token-with-sufficiant-permissions">Create Cloudflare API token with sufficiant permissions&lt;/h1>
&lt;p>I needed to create a Cloudflare API token so cf-terraforming and Terraform can interact with Cloudflare. To do this I navigate to the &lt;a href="https://dash.cloudflare.com/profile/api-tokens">Cloudflare API Token page&lt;/a>, Select create token and then create custom token. Give the token sufficiant privalages to do what I needed it to do. For the purpose of DNS I selected Zone DNS Edit from the permissions dropdown and under the Zone Resource dropdown I selected Include Specific Zone samtripp.co.uk. I then followed the rest of the wizard to create my API Token.&lt;/p>
&lt;p>Once this was created I was able to export my API Token along with my zone id which can be found on the Cloudflare dashboard onto my laptop as an environment varible in my terminal&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="nb">export&lt;/span> &lt;span class="nv">CLOUDFLARE_API_TOKEN&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s1">&amp;#39;YOURAPITOKEN&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">export&lt;/span> &lt;span class="nv">CLOUDFLARE_ZONE_ID&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s1">&amp;#39;YOURZONEID&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="initialise-terraform-working-directory-with-cloudflare-module-present">Initialise Terraform working directory with Cloudflare module present&lt;/h1>
&lt;p>To start using the cf-terraforming tool I need to add the &lt;a href="https://registry.terraform.io/providers/cloudflare/cloudflare/latest/docs">Cloudflare provider&lt;/a> to my terraform code. I created a &lt;code>cloudflare.tf&lt;/code> file and added the following&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-hcl" data-lang="hcl">&lt;span class="line">&lt;span class="cl">&lt;span class="k">terraform&lt;/span> {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">required_providers&lt;/span> {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n"> cloudflare&lt;/span> &lt;span class="o">=&lt;/span> {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n"> source&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;cloudflare/cloudflare&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n"> version&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;~&amp;gt; 4.0&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> }
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> }
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Once this was added I ran a &lt;code>terraform init&lt;/code> to initialise the terraform working directory.&lt;/p>
&lt;h1 id="generating-the-cloudflare-terraform-code">Generating the Cloudflare terraform code&lt;/h1>
&lt;p>This is where the magic happens. I was able to generate the Cloudflare terraform code from the terraform working directory by running the following command:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">cf-terraforming generate --resource-type &lt;span class="s2">&amp;#34;cloudflare_record&amp;#34;&lt;/span> --zone &lt;span class="nv">$CLOUDFLARE_ZONE_ID&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>This outputted:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-hcl" data-lang="hcl">&lt;span class="line">&lt;span class="cl">&lt;span class="k">resource&lt;/span> &lt;span class="s2">&amp;#34;cloudflare_record&amp;#34; &amp;#34;terraform_managed_resource_05e4f175dfbb21e818e9ff4e30e75796&amp;#34;&lt;/span> {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n"> name&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;samtripp.co.uk&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n"> proxied&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kt">true&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n"> ttl&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n"> type&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;CNAME&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n"> value&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;dnsrecordvalue.co.uk&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n"> zone_id&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;myzoneid&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">}
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">...&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Perfect that worked as expected. I copied the output into a new file called &lt;code>cloudflare-dns.tf&lt;/code>. I ran a &lt;code>terraform plan&lt;/code> and saw that terraform wants to create the infrastructure. I need to import this resource into the terraform state to avoid destroying anything already configured. To do this I ran the following command:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">cf-terraforming import --resource-type &lt;span class="s2">&amp;#34;cloudflare_record&amp;#34;&lt;/span> --zone &lt;span class="nv">$CLOUDFLARE_ZONE_ID&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>This outputted:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">terraform import cloudflare_record.terraform_managed_resource_05e4f175dfbb21e818e9ff4e30e75796 myzoneid/05e4f175dfbb21e818e9ff4e30e75796
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>This command would be sufficiant to import the Cloudflare DNS record into terraform state. One thing I was not happy about was the names of these resources. As this was not in state yet I was able to manually edit the resource name to something more meaningful.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-hcl" data-lang="hcl">&lt;span class="line">&lt;span class="cl">&lt;span class="k">resource&lt;/span> &lt;span class="s2">&amp;#34;cloudflare_record&amp;#34; &amp;#34;cname_root&amp;#34;&lt;/span> {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">...&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Once renamed I ran the terraform import command with the ammended name&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">terraform import cloudflare_record.cname_root myzoneid/05e4f175dfbb21e818e9ff4e30e75796
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>The Cloudflare DNS record is now in state. I was able to run a &lt;code>terraform plan&lt;/code> and see there are no changes to be made to my infrastructure. If you have multiple DNS records like I did you may want to run import and then plan each time to ensure no issues. You will see the number of changes to be made decrease after each successful import.&lt;/p>
&lt;h1 id="add-cloudflare-api-key-to-github-actions">Add Cloudflare API key to Github Actions&lt;/h1>
&lt;p>Github Actions provides me with my all my Continuious Intergration and Continuous Delivery needs. I use &lt;a href="https://github.com/dflook/terraform-github-actions">dflook/terraform-github-actions&lt;/a> to give me the functionality of running a terraform plan and apply when I make infrastructure changes. For Github Actions to interact with Cloudflare via Terraform I will need to add my API key to Github Actions. I managed this by navigating to my Github repository, select Settings &amp;gt; Secrets and Varibles &amp;gt; Actions &amp;gt; New Repository Secret. I named the secret CLOUDFLARE_API_TOKEN and then added the API token that I generated earlier. Once thats done I added the following lines to my Github actions .yaml file.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">env:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> CLOUDFLARE_API_TOKEN: &lt;span class="si">${&lt;/span>&lt;span class="p">{ secrets.CLOUDFLARE_API_TOKEN &lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="conclusion">Conclusion&lt;/h1>
&lt;p>The cf-terraforming tool was straightforward to use and made the process of importing some of my Cloudflare configuration into Terraform a pain-free experience. Credit to all the developers involved in making this tool possible. I have also been able to import my page rules successfully following the same process as above. I will continued to use this tool to capure the rest of my Cloudflare configuration into Infrastructure-as-Code.&lt;/p>
&lt;p>It does not support every resource type in the Cloudflare provider currently but it at least covers some of the critical ones that could be disruptive without being able to import it into my Terraform state.&lt;/p></description></item><item><title>Migrate from LineageOS for microG to LineageOS with microG</title><link>https://www.samtripp.co.uk/posts/migrate-from-lineageos-for-microg-to-lineageos-with-microg/</link><pubDate>Fri, 12 Apr 2024 08:00:00 +0100</pubDate><guid>https://www.samtripp.co.uk/posts/migrate-from-lineageos-for-microg-to-lineageos-with-microg/</guid><description>&lt;p>I&amp;rsquo;ve decided to migrate my phones OS from &lt;a href="https://lineage.microg.org/">LineageOS for microG&lt;/a> to &lt;a href="https://lineageos.org/">LineageOS&lt;/a> with &lt;a href="https://microg.org/">microG&lt;/a> and I&amp;rsquo;ve documented my process of doing this.&lt;/p>
&lt;h1 id="why-use-lineageos">Why use LineageOS&lt;/h1>
&lt;p>I&amp;rsquo;ve ran LineageOS back when it was called Cynogenmod on my OnePlusOne and I&amp;rsquo;ve stuck to it ever since on my Android phones. I liked how it was a clean consistent Android OS which was well supported across many phones meaning if my device broke and was beyond economical repair I can get a new supported device and enjoy the same experience that I had before. It also prolongs the life of my phones as the majority of phones will get 2 to 3 years OS updates from manufacturers whereas LineageOS is still providing updates for my previous phone, a Xiaomi Pocophone F1 which was released in 2018. This allows me to run a system with the latest android securirty patches and reduces the creation of unnessecary e-waste.&lt;/p>
&lt;h1 id="why-use-microg">Why use microG&lt;/h1>
&lt;p>It may be no great surprise to anyone how much information Google collects on any given person but people may overlook how much data the Google Play services collect on you. I can&amp;rsquo;t tell you exactly how much they collect or what they collect because it is not open source. That is a problem in its own right as I can&amp;rsquo;t audit what the Play Services are collecting on me. Sadly using Android without the Play Services whilst not impossible is a less desirable experience. A lot of developers utilise a lot of the Google Play API&amp;rsquo;s in their apps which will mean that some apps will either malfunction or not behave as designed when Google Play services are not installed. This is where microG enters the arena. It bridges the gap between usability and open. Google may still get some metrics whilst using microG but its just enough to ensure that the various apps I want to use now work. Its not perfect but a pragmatic compromise.&lt;/p>
&lt;h1 id="why-did-i-use-lineageos-for-microg">Why did I use LineageOS for microG&lt;/h1>
&lt;p>The official LineageOS team took a stance that they would not allow signature spoofing. This was required by microG to pretend to be the Google Play Services so apps called its reimplemented API&amp;rsquo;s. This was largely driven by security concerns which is somewhat fair however with this being a nessecity for microG an unofficial fork was created and the &lt;a href="https://lineage.microg.org/">LineageOS for microG&lt;/a> custom ROM was born. This ROM was LineageOS with MicroG built in and was arguably the easiest way for me to get both LineageOS and microG in one convenient package.&lt;/p>
&lt;h1 id="why-migrate-away-from-lineageos-for-microg">Why migrate away from LineageOS for microG&lt;/h1>
&lt;p>&lt;a href="https://review.lineageos.org/c/LineageOS/android_frameworks_base/+/383574">LineageOS/android_frameworks_base change 383574&lt;/a> has now allowed the microG to signature spoof. This has made LineageOS for microG custom rom redundant. Whilst they&amp;rsquo;ve not stopped releases immediately I am predicting in the near future they may do this.&lt;/p>
&lt;p>Other than speculation there are a couple of minor benefits to moving back to the official LineageOS release, most notably frequent updates. For my device there is a weekly release for the official LineageOS custom ROM. As a result of this I will get security fixes and any other changes quicker than LineageOS for microG custom ROM which was a monthly release.&lt;/p>
&lt;h1 id="how-am-i-migrating">How am I migrating&lt;/h1>
&lt;p>Inconveniently its not as simple as installing the official LineageOS release over LineageOS for MicroG so the plan is as follows:&lt;/p>
&lt;ol>
&lt;li>Take a full nandroid backup just incase it goes horribly wrong and I need to revert&lt;/li>
&lt;li>Backup all applications and their data&lt;/li>
&lt;li>Install latest phone firmware&lt;/li>
&lt;li>Install LineageOS Recovery&lt;/li>
&lt;li>Install LineageOS&lt;/li>
&lt;li>Restore all applications and their data&lt;/li>
&lt;li>Install microG&lt;/li>
&lt;/ol>
&lt;h1 id="prerequisite">Prerequisite&lt;/h1>
&lt;p>adb and fastboot needs to be installed on the computer. On a Debian based system this is as simple as running the following command in the terminal.&lt;/p>
&lt;pre tabindex="0">&lt;code>sudo apt install adb fastboot
&lt;/code>&lt;/pre>&lt;h1 id="take-full-nandriod">Take full nandriod&lt;/h1>
&lt;p>To do this I will be using &lt;a href="https://xdaforums.com/t/recovery-12-13-14-official-orangefox-recovery-project-r11-1.4472617/">OrangeFox recovery&lt;/a>. I followed &lt;a href="https://wiki.orangefox.tech/en/guides/installing_orangefox">this guide&lt;/a> to get OrangeFox recovery installed.&lt;/p>
&lt;p>Once booted into OrangeFox recovery I then took a backup of boot, data &amp;amp; super partitions. This should hopefully be enough for me to abort and revert if nessecary.&lt;/p>
&lt;p>Once this has done I took a copy of the Fox directory from the phone onto the computer.&lt;/p>
&lt;h1 id="backup-all-applications-and-their-data">Backup all applications and their data.&lt;/h1>
&lt;p>To do this we are utilising the built in backup functionality in LineageOS which is &lt;a href="https://github.com/seedvault-app/seedvault">seedvault&lt;/a>. This is not a perfect solution as we&amp;rsquo;re depending on app makers to implement backups the Android standard way. As a result of doing this I am expecting to lose my Whatsapp chat history. I could backup to Google Drive if I really was that precious over the chat history but there is nothing that I need to keep there and I was not willing to backup to Google Drive.&lt;/p>
&lt;p>To turn on seedvault backups I did this in Settings &amp;gt; System &amp;gt; Backup &amp;gt; Seedvault Backup&lt;/p>
&lt;p>Once I completed my backup I took a copy of the .SeedVaultAndroidBackup directory onto the computer.&lt;/p>
&lt;h1 id="install-latest-phone-firmware">Install latest phone firmware&lt;/h1>
&lt;p>As I have been running LineageOS for quite a while there is a possibility that my phone firmware is out of date. On Xiaomi phones these usually get delivered as part of the MIUI update. Fortunately the kind folks at &lt;a href="https://xiaomifirmwareupdater.com/">Xiaomi Firmware Updater&lt;/a> provide flashable firmware meaning you do not need to install MIUI to get firmware updates. Firmware updates can bring driver fixes and security updates to your device so there is value to doing this periodically. Now seems a perfect time given we&amp;rsquo;re doing a full system refresh.&lt;/p>
&lt;p>To do this I downloaded the latest firmware from Xiaomi Firmware Updater. I then rebooted my device into recovery. Once in recovery I went to Apply Update &amp;gt; Apply from ADB&lt;/p>
&lt;p>Once ADB is enabled I should be able to run this command from the directory where I downloaded the firmware from inside my terminal:&lt;/p>
&lt;pre tabindex="0">&lt;code>adb sideload fw_alioth_miui_ALIOTHEEAGlobal_V14.0.11.0.TKHEUXM_067e9d6f67_13.0.zip
&lt;/code>&lt;/pre>&lt;p>A popup on the phone will say Signiture verification Failed install anyway? I selected yes here. This is due to the flashable firmware not being signed by the LineageOS Team.&lt;/p>
&lt;h1 id="install-lineageos-recovery-and-lineageos">Install LineageOS Recovery and LineageOS&lt;/h1>
&lt;p>To avoid reinventing the wheel the folks over at LineageOS have a very good guide on how to install LineageOS for the Xiaomi Poco F3 on &lt;a href="https://wiki.lineageos.org/devices/alioth/install/variant1/">their website&lt;/a>.&lt;/p>
&lt;p>If you&amp;rsquo;re coming from a custom rom before some of these steps are not nessecary such as unlocking bootloaders. It is worth noting at this point I will be resetting the phone to factory settings so be sure to take a copy of anything important as data will be lost beyond this point.&lt;/p>
&lt;p>Once those steps are complete I rebooted the device and follow the wizard to setup the device for the first time.&lt;/p>
&lt;h1 id="restoring-applications-and-data">Restoring applications and data&lt;/h1>
&lt;p>As a result of resetting the phone I need to copy our backup onto the phone. To do this I copied the .SeedVaultAndroidBackup from the computer back onto the phone. Once thats completed open the phone dialer and type &lt;code>*#*#7378673#*#*&lt;/code>. This will open up the seedvault restore process.&lt;/p>
&lt;p>I was plesantly surprised at what a good job seedvault did at restoring my apps. Only a couple had issues being restored. One being F-Droid and the others being microG components. Both will be installed in due course.&lt;/p>
&lt;p>The rest of my restore was internal storage items such as photos etc which I was able to move onto the device via the file explorer on my computer.&lt;/p>
&lt;h1 id="install-microg">Install microG&lt;/h1>
&lt;p>The final piece of the jigsaw. To install microG I need to install &lt;a href="https://f-droid.org/">F-Droid from the projects homepage&lt;/a>. Once this is done I can go to settings in F-droid and add the microG repository which can be found on the &lt;a href="https://microg.org/download.html">microG project website&lt;/a>. Once I&amp;rsquo;ve added this I then installed microG Service, microG Service Framework Proxy &amp;amp; microG companion from the F-droid repository. Once completed I rebooted the phone as I patched some key system components. Once rebooted I navigate to microG setting and select self check. I saw a lot of unchecked boxes so click on them to give microG the nessecary permissions to function. Once this has been completed I have done the minimum to get get microG running.&lt;/p>
&lt;h1 id="optional-tasks-that-would-be-worth-doing">Optional tasks that would be worth doing&lt;/h1>
&lt;p>If you&amp;rsquo;re following along with what I did and this is your first time running microG you may want to consider these extra tasks:&lt;/p>
&lt;ul>
&lt;li>
&lt;p>You may want to return to the microG settings and turn on Cloud Messaging. This is used by a lot of applications to handle push notifications.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>You may also want to install a location backend to improve the quality of your location services. There are many backend you can choose for this. I personally use the &lt;a href="https://f-droid.org/en/packages/org.microg.nlp.backend.ichnaea/">MozillaNlpBackend&lt;/a> but you can find a list of them on the &lt;a href="https://github.com/microg/UnifiedNlp?tab=readme-ov-file#usage">UnifiedNlp GitHub repository&lt;/a> which is maintained by the microG project.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>You may also want to install the &lt;a href="https://f-droid.org/packages/com.aurora.store/">Aurora Store&lt;/a>. This is an open source Google Play client that you can use to install your apps. Considerably more privacy respecting in comparision to the official Google Play client.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h1 id="conclusion">Conclusion&lt;/h1>
&lt;p>This was a relatively uneventful OS swap. All worked fairly seamlessly with the exception of losing Whatsapp chat history which could have been avoided if I was willing to back it up to Google Drive. A successful change which will help to prolong the life of my Xiaomi Poco F3. The device has proven to be good value for money up to this point and I will probably stick with it for the foreseeable especially when the current phone market is not offering me much more than what I&amp;rsquo;ve got.&lt;/p></description></item><item><title>A selection of my favorite EuroPython 2023 talks</title><link>https://www.samtripp.co.uk/posts/a-selection-of-my-favorite-europython-2023-talks/</link><pubDate>Sun, 03 Mar 2024 22:00:00 +0000</pubDate><guid>https://www.samtripp.co.uk/posts/a-selection-of-my-favorite-europython-2023-talks/</guid><description>&lt;p>Back in July I attended my first Software Engineering conference &lt;a href="https://ep2023.europython.eu/">EuroPython 2023&lt;/a>. If you&amp;rsquo;re holding off of booking your first conference for various reasons or are unsure of which one to attend I found EuroPython a very friendly and welcoming conference, that is tailored to the developer. I found the conference fairly priced for the value that I got out of it. Unfortunately I can&amp;rsquo;t comment on the tutorials or the sprints as I did not attend them.&lt;/p>
&lt;p>&lt;strong>Would I go to another conference after that experience&lt;/strong>: Yes - I went to &lt;a href="https://fosdem.org/2024">FOSDEM 24&lt;/a>&lt;/p>
&lt;p>&lt;strong>Would I go to EuroPython again&lt;/strong>: Yes, I will give it a couple of years before going again as I&amp;rsquo;ve now got a taste for attending Software Engineering conferences so I would like to check others out first but no doubt I will return in the future.&lt;/p>
&lt;p>The key purpose to this blog post is to reflect on a selection of talks that I found valuable or enjoyed during the conference. There was a wide selection of talks to attend although sadly I could not attend them all. Most of the talks I attended were aimed towards a DevOps audience.&lt;/p>
&lt;h1 id="cli-application-development-made-easier-with-typer--vinícius-gubiani-ferreira">CLI application development made easier with typer — Vinícius Gubiani Ferreira&lt;/h1>
&lt;p>
&lt;div style="position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;">
&lt;iframe src="https://www.youtube.com/embed/bLTwNZiMLBE" style="position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;" allowfullscreen title="YouTube Video">&lt;/iframe>
&lt;/div>
&lt;a href="https://www.youtube.com/watch?v=bLTwNZiMLBE">Watch on Youtube&lt;/a>&lt;/p>
&lt;p>This talk introduced me to the Typer library. As someone who has built CLI&amp;rsquo;s in the past using such libraries as Argparse and Fire, I quickly discovered that Typer is a game changer. You can get a CLI app running in no time at all using this. I created a proof of concept CLI thanks to this talk. If I was to make a CLI application in the future this would be my go to library.&lt;/p>
&lt;h1 id="optimizing-your-ci-pipelines--sebastian-witowski">Optimizing Your CI Pipelines — Sebastian Witowski&lt;/h1>
&lt;p>
&lt;div style="position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;">
&lt;iframe src="https://www.youtube.com/embed/goWcDalv_FQ" style="position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;" allowfullscreen title="YouTube Video">&lt;/iframe>
&lt;/div>
&lt;a href="https://www.youtube.com/watch?v=goWcDalv_FQ">Watch on Youtube&lt;/a>&lt;/p>
&lt;p>This talk could not have come at a more appropriate time for me, as when I returned to work I was going to have to spend a lot of time creating pipelines. Some solid advice and recommendations around pipeline creation that I was able to utilise immediately.&lt;/p>
&lt;h1 id="pip-install-malware--max-kahan">pip install malware — Max Kahan&lt;/h1>
&lt;p>
&lt;div style="position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;">
&lt;iframe src="https://www.youtube.com/embed/hfoCh4yuJpo" style="position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;" allowfullscreen title="YouTube Video">&lt;/iframe>
&lt;/div>
&lt;a href="https://www.youtube.com/watch?v=hfoCh4yuJpo">Watch on Youtube&lt;/a>&lt;/p>
&lt;p>Nothing in this talk was a great shock to me. Plenty of bad actors are deploying malicious packages on PyPI. That being said it was a very well presented talk and is a great reminder to not just blindly install anything off the internet. The key takeway could extend beyond the Python ecosystem.&lt;/p>
&lt;h1 id="designing-a-human-friendly-cli-for-api-driven-infrastructure--oliver-rew">Designing a Human-Friendly CLI for API-Driven Infrastructure — Oliver Rew&lt;/h1>
&lt;p>
&lt;div style="position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;">
&lt;iframe src="https://www.youtube.com/embed/6LeB5j331bU" style="position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;" allowfullscreen title="YouTube Video">&lt;/iframe>
&lt;/div>
&lt;a href="https://www.youtube.com/watch?v=6LeB5j331bU">Watch on Youtube&lt;/a>&lt;/p>
&lt;p>A great talk discussing closely coupled API&amp;rsquo;s and autogenerated CLI&amp;rsquo;s based off the API documentation. I can think of plenty of times in the past where I would have benefitted from such tooling. The only downside is that this tool is not publicly available, however the insight into well designed tooling was valuable.&lt;/p>
&lt;h1 id="from-idea-to-production--honza-král">From idea to production — Honza Král&lt;/h1>
&lt;p>
&lt;div style="position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;">
&lt;iframe src="https://www.youtube.com/embed/02XHM_XvsWs" style="position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;" allowfullscreen title="YouTube Video">&lt;/iframe>
&lt;/div>
&lt;a href="https://www.youtube.com/watch?v=02XHM_XvsWs">Watch on Youtube&lt;/a>&lt;/p>
&lt;p>A self declared opinionated checklist for going from an idea into production. The example given was for a Django website but I would say it could be applied to most development projects. Key point to note is setting ideas up with the necessary tooling to succeed from the beginning will save a lot of pain retrofitting it once you&amp;rsquo;ve gone to production.&lt;/p>
&lt;h1 id="honerable-meantion-for-lighting-talk-fk-it---how-to-fix-production-code-in-5-minutes--sebastien-crocquevieille">Honerable meantion for lighting talk F**k it - How to Fix Production Code in 5 Minutes — Sebastien Crocquevieille&lt;/h1>
&lt;p>&lt;a href="https://www.youtube.com/watch?v=IQ9UFhmGC9k&amp;amp;list=PL8uoeex94UhFcwvAfWHybD7SfNgIUBRo-&amp;amp;index=65&amp;amp;t=2919s">Watch on Youtube&lt;/a>&lt;/p>
&lt;p>Bit of light humour to finish off the conference. Content Advisory as you can probably work out there is some bad language in this lightning talk.&lt;/p></description></item><item><title>Digital Security 101: Reinforce you password security with two-factor authentication</title><link>https://www.samtripp.co.uk/posts/digital-security-101-reinforce-you-password-security-with-two-factor-authentication/</link><pubDate>Fri, 09 Feb 2024 12:30:00 +0000</pubDate><guid>https://www.samtripp.co.uk/posts/digital-security-101-reinforce-you-password-security-with-two-factor-authentication/</guid><description>&lt;p>Congratulations, If you&amp;rsquo;re following on from my previous post you have taken the first steps into improving your digital security. Unfortunately what you probably won&amp;rsquo;t want to hear is that strong passwords, whilst an excellent start are just not enough on there own. To ensure you&amp;rsquo;re account is even more secure it is strongly enouraged that you apply two-factor authentication to your accounts wherever this is availible.&lt;/p>
&lt;h1 id="why-should-i-do-it">Why should I do it&lt;/h1>
&lt;p>Imagine if you were at top of the list of people who have had their accounts compromised which account are they likely to start with. Two-factor authentication offers you a second line of defence and could potentially buy you some time to change your password before someone compromises your account. If you enable two-factor authentication you are protecting your account with something you know (your password) and something you have (your device containing your two-factor authentication codes).&lt;/p>
&lt;h1 id="what-are-my-options">What are my options&lt;/h1>
&lt;p>There are many ways to implement two-factor authentication and below I&amp;rsquo;ve listed a selection of the most common and convenient ways of implementing this. Whilst some of these methods are better than others it is always worth keeping in mind that any two-factor authentication is better than no two-factor authentication at all.&lt;/p>
&lt;p>SMS One Time Passwords are quite a common way of implementing two-factor authentication. I would discourage against this unless there is no other option. If someone was able trick your mobile phone operator to issue a Port Authorisation Code, they could move your mobile number to a phone which they possess and would be able to receive your One Time Passwords. You may be thinking whats the probability of this happening, unfortunately it is common enough to have earned the term Simjacking.&lt;/p>
&lt;p>There is a good chance that your password manager has the capabilities of handling your two-factor authentication. &lt;a href="https://keepassxc.org/">KeepassXC&lt;/a> &amp;amp; &lt;a href="https://1password.com/">1Password&lt;/a> are just an example of a couple of password managers that have that capability. Whilst a very convenient way of using two-factor authentication, if someone unfortunately gains access to your password manager they will have everything they need to access your accounts.&lt;/p>
&lt;p>Then there is the Mobile Phone App solution. You may have seen in the security settings of the service that you use &amp;ldquo;protect your account with Google Authenticator&amp;rdquo;. Google Authenticator uses 2 standards called Time-based One Time Passwords and HMAC-based One Time Passwords to generate new codes every 30 seconds to grant you access to an account. Once setup and you&amp;rsquo;ve entered your username and password on a service that you use, you will then be taken to a page where you are asked to enter this code from your device. As you can imagine with this changing every 30 seconds it makes a breach of your account very difficult.&lt;/p>
&lt;p>Which app should you choose? As we just stated above &lt;a href="https://apps.apple.com/gb/app/google-authenticator/id388497605">Google Authenticator&lt;/a> is completely capable of handling your two-factor authentication but there are plenty more applications that can and that are open source, something which Google Authenticator has not been since version 2.21. I was a previous user of Google Authenticator so should you wish to use it then its better than nothing however I personally believe there are better apps that offer a greater feature set.&lt;/p>
&lt;p>I&amp;rsquo;ve tried a few apps for Android such as &lt;a href="https://play.google.com/store/apps/details?id=org.liberty.android.freeotpplus">FreeOTP+&lt;/a>, &lt;a href="https://play.google.com/store/apps/details?id=com.beemdevelopment.aegis">Aegis Authenticator&lt;/a> but the one I did settled on was &lt;a href="https://play.google.com/store/apps/details?id=org.shadowice.flocke.andotp">andOTP&lt;/a>. It&amp;rsquo;s a free and Open Source app that has all the capabilites of Google Authenticator and the extras like backup your one time passcodes and password protect your one time password. I have noticed that andOTP is now unmaintained so you may want to consider one of the other two apps as no doubt I will migrate to one of them soon.&lt;/p>
&lt;h1 id="dont-lock-yourself-out">Don&amp;rsquo;t lock yourself out&lt;/h1>
&lt;p>You may want to take some precautionary measures to ensure you don&amp;rsquo;t accidently lock yourself out of your own accounts. As you can imagine storing these passcodes on a device like your mobile phone is excellent until you lose or break your mobile phone. You could create a new vault in KeepassXC and scan the QR Code (or enter the secret key) in that vault. That way if you lose access to your device you still have the same codes availible to you. Whilst convenient some may advise against this as you have muliple copies of these one time codes now. If you feel that is to much of a security risk then you&amp;rsquo;ll be glad to know there is an alternative and they are called backup codes.&lt;/p>
&lt;p>I can not stress how important backup codes are. If a service offers you backup codes then be sure to take note of them. By taking note of the backup codes these single use passcodes will allow you to regain access to your account allowing you to setup your One Time Passcodes on a new device. The recommended storage method for these codes are on paper and store them in a fire proof safe. I can imagine some people do not have a safe in their house so the next best thing would be to store them in an encrypted method like in a Keepass Vault and store that Password Vault offline.&lt;/p>
&lt;h1 id="how-do-i-do-it">How do I do it&lt;/h1>
&lt;p>I take the same approach for setting up two-factor authentication as I do with my passwords. I protect the most important services I use or the ones that will cause you the most problems if I were breached. You can see if the website/services you use support two-factor authentication by visiting the website &lt;a href="https://2fa.directory">2fa.directory&lt;/a>. You then visit the service you want to set up two-factor authentication on. Scan the QR Code or enter the Secret Key into your app and then enter the passcode to verify the code is working.&lt;/p>
&lt;p>Congratulations you have just taken the next step in protecting yourself with two-factor authentication.&lt;/p>
&lt;h1 id="tldr-too-long-didnt-read">TL;DR (Too Long Didn&amp;rsquo;t Read)&lt;/h1>
&lt;ul>
&lt;li>Use two-factor authentication wherever possible&lt;/li>
&lt;li>Some two-factor authentication is better than no two-factor authentication&lt;/li>
&lt;li>Google Authenticator is not your only choice of app&lt;/li>
&lt;li>Make sure you take note of your backup codes&lt;/li>
&lt;/ul></description></item><item><title>Digital Security 101: Time to start using a password manager</title><link>https://www.samtripp.co.uk/posts/digital-security-101-time-to-start-using-a-password-manager/</link><pubDate>Sun, 28 Mar 2021 11:45:00 +0000</pubDate><guid>https://www.samtripp.co.uk/posts/digital-security-101-time-to-start-using-a-password-manager/</guid><description>&lt;p>I&amp;rsquo;ve written this post as a result of my frustrations with people from all walks of life using terrible password practice. If this post ends up changing one persons way of managing their passwords then it has served its purpose.&lt;/p>
&lt;p>It&amp;rsquo;s time to take back control of your internet security. Breaches are becoming more common and one day you will get caught. You may see it as insignificant as an old email address you used at secondary school or an old social media account that you&amp;rsquo;ve not logged onto for about 10 years but I will go on to explain that it is much more significant than you might think, hopefully before it becomes an invasion of your privacy.&lt;/p>
&lt;p>These breaches are currently worth the hackers time and this is largely down to peoples poor password practices. Whilst you may think your password is a good password all it takes is one breach to make that password a bad password. You probably use that password everywhere from your online banking to your social media accounts. You may think having two or three passwords will outsmart them but I can assure it will not. There is a practice called credential stuffing where hackers will use your username and password from a breach and test it against multiple websites to gain unauthorized access to your accounts. You can check if you&amp;rsquo;ve been part of any breach using &lt;a href="https://haveibeenpwned.com/">HaveIBeenPwned&lt;/a>. Don&amp;rsquo;t be alarmed if you find you&amp;rsquo;re part of a breach just ensure you take the nessecary action to protect yourself now you know your password could be exposed.&lt;/p>
&lt;p>The best practice is to use one password per account built up of letters, numbers and symbols. The longer the password the better. Now this is absolutely impossible to remember for every single account you own and this is where a tool like a password manager proves to be very useful. You use a password manager to generate strong passwords for your multiple accounts and store them in an encrypted password database. Think of it as a vault for all your passwords. This vault is protected by a strong master password which you can remember. Make sure this password is strong and is only used for your password vault. &lt;a href="https://www.youtube.com/watch?v=yzGzB-yYKcc">This interview with Edward Snowden on Last Week Tonight with John Oliver&lt;/a> will show you how to think of a strong master password.&lt;/p>
&lt;p>Now the choice of password management software. There are plenty of choices to go with here. Some examples of such popular commercial offerings are &lt;a href="https://1password.com/">1password&lt;/a> and &lt;a href="https://www.lastpass.com/">Lastpass&lt;/a> with their cloud based solutions meaning you can access your password from anywhere on any device so long as you have internet connectivity. These are certainly viable solutions and are worth considering if you&amp;rsquo;re looking for convenience.&lt;/p>
&lt;p>I personally use &lt;a href="https://keepassxc.org/">KeepassXC&lt;/a> on my laptop and &lt;a href="https://www.keepassdx.com/">KeepassDX&lt;/a> on my Android mobile phone. These are both compatible with accessing my Keepass password vault. I find Keepass a very good solutions due to its optional two step verification meaning you can protect your vault not only with a strong password but also with a key file. The key file is a seperate file which you would need to provide to access your password vault. This would mean if your strong password ever got breached they should not be able to access your password vault without the key file and vice versa. Keepass is also an offline password manager so should you find yourself without any internet connectivity or a service is down you can still access your passwords. Also with a password manager being offline this means the likelihood of you losing your password vault as part of a breach online is incredibly low. KeepassXC is also open source meaning that you can verify yourself that there is no malicious code going into your password management solution by reading the softwares source code should you wish. Also should the project get abandoned or development halts someone can fork the software and continue to contribute to the application as part of a seperate project, after all KeepassXC is a fork of KeepassX when development stalled in 2016. KeepassXC is also excellent value for money as there is no charge for usage. Its also worth noting that if you are an iOS user there are plenty of Keepass compatible password managers in the app store, however as I do not use this on any iOS device I can not comment on the useability of the applications.&lt;/p>
&lt;p>Whilst the idea of keeping your passwords offline is great from a security standpoint there are some inconveniences, such as accessing my most up to date password vault on the go. You can achieve similar results to the cloud based password managers with Keepass by storing your vault in a cloud storage solution such as Dropbox, Google Drive, Microsoft OneDrive etc. Now doing this does increase the risk of unauthorized access to your vault but the risk is reduced by using a strong password and a key file to your vault. &lt;strong>Under no circumstances should you store the keyfile in the cloud&lt;/strong>, only store your vault there. Keep the keyfile local on your laptop and devices and transfer it locally using a USB Cable or another solution that does not involve the internet. Its also strongly encouraged that you keep this backed up somewhere safe. Data corruption can happen and it can be hard work regaining access to all your accounts.&lt;/p>
&lt;p>Now to begin on changing all your passwords. I would start off with all the accounts that could impact your life should unauthorized access happen such as internet banking, email, social media etc. There is no question that this is a tedious task and whilst its strongly encouraged to change all of your passwords right away, it may also not be feasible. Get the critical ones done first and then just change the rest when you can. I also strongly advise whilst changing your password that you enable two factor authentication where you can for that extra bit of security. I hope to write a post on this subject in the near future.&lt;/p>
&lt;p>Now when the next breach occurs no matter how big or small you&amp;rsquo;re prepared. You will just need to change that one exposed password instead of every password you have. This one initial effort of changing all your passwords has now paid off saving you time, effort and stress.&lt;/p></description></item></channel></rss>